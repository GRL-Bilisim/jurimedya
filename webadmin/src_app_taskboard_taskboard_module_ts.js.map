{"version":3,"file":"src_app_taskboard_taskboard_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuD;AAEI;;;AAE3D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACP,SAAS,EAAE,oEAAkB;QAC9B,IAAI,EAAE;YACJ,KAAK,EAAE,WAAW;SACnB;KAEF;CACF,CAAC;AAEF;IAAA;KAIuC;gGAA1B,sBAAsB;uHAAtB,sBAAsB;2HAHxB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;iCAlBxB;CAoBuC;AAAJ;mIAAtB,sBAAsB,oFAFvB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;ACjBmE;AAEpC;AACgB;AAGS;;;;;;;;;;ICoCpE,oEAAwC;IAAA,uDAAqC;;IAAA,4DAAI;;;IAAzC,0DAAqC;IAArC,wKAAqC;;;IAC7E,0EACqE;IACnE,qEAA0D;IAC5D,4DAAM;;;IADC,0DAAwB;IAAxB,iJAAwB;;;IAI3B,0EAA+C;IAAA,mEAA6B;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,kFAAkB;;;IAC9F,0EAAkD;IAAA,mEACX;IAAA,uDAAqB;IAAA,4DAAM;;;IAA3B,0DAAqB;IAArB,qFAAqB;;;IAC5D,sEAAkC;IAAA,mEAA4B;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,kFAAkB;;;IAGhF,qEAAwC;IACtC,qEAA+E;IACjF,4DAAK;;;IADyB,0DAAc;IAAd,wIAAc;;;IAF9C,yEAA0F;IACxF,0HAEK;IACP,4DAAK;;;IAHiB,0DAAkB;IAAlB,uFAAkB;;;;IAWxC,6EAAuH;IAA1B,+ZAAyB;IACpH,uEAAM;IAAA,mEAAG;IAAA,4DAAO;IACpB,4DAAS;;;;IACP,6EAAkI;IAAnC,waAAkC;IAC/H,uEAAM;IAAA,sEAAM;IAAA,4DAAO;IACvB,4DAAS;;;;IACT,6EAAiI;IAAnC,waAAkC;IAC9H,uEAAM;IAAA,8DAAG;IAAA,4DAAO;IACpB,4DAAS;;;;IA7CX,0EAAwF;IACtF,0EAAuB;IACrB,0EAAiD;IAC/C,2EAA8E;IAAA,uDAAkB;IAAA,4DAAO;IASzG,4DAAM;IACN,kHAAiF;IACjF,sHAGM;IACN,0EAA+D;IAC7D,0EAAiC;IAC/B,sHAAoG;IACpG,wHACkE;IAClE,wHAAsF;IACxF,4DAAM;IACN,sHAIK;IAEP,4DAAM;IACN,2EAAoD;IAClD,uEAAK;IACH,8EAAiH;IAA9C,+YAA6C;IAC9G,wEAAM;IAAA,sEAAK;IAAA,4DAAO;IACtB,4DAAS;IACT,8HAEO;IACP,8HAEO;IACT,8HAEO;IAEL,4DAAM;IACR,4DAAM;IAER,4DAAM;IACR,4DAAM;;;;IAnDqD,oFAA4B;IAG9C,0DAA0C;IAA1C,+GAA0C;IAAC,0DAAkB;IAAlB,kFAAkB;IAU9F,0DAAiC;IAAjC,gGAAiC;IAC/B,0DAAkC;IAAlC,iGAAkC;IAMjB,0DAA0B;IAA1B,yFAA0B;IAC1B,0DAA6B;IAA7B,4FAA6B;IAE1C,0DAA0B;IAA1B,yFAA0B;IAEkC,0DAAoB;IAApB,mFAAoB;IAY/E,0DAAyB;IAAzB,iGAAyB;IAGzB,0DAAyB;IAAzB,iGAAyB;IAG3B,0DAAyB;IAAzB,iGAAyB;;;IA2BlC,oEAAuC;IAAA,uDAAoB;IAAA,4DAAI;;;IAAxB,0DAAoB;IAApB,qFAAoB;;;IAC3D,0EACqE;IACnE,qEAA0D;IAC5D,4DAAM;;;IADC,0DAAwB;IAAxB,kJAAwB;;;IAI3B,0EAA+C;IAAA,mEAA6B;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,mFAAkB;;;IAC9F,0EAAkD;IAAA,mEACX;IAAA,uDAAqB;IAAA,4DAAM;;;IAA3B,0DAAqB;IAArB,sFAAqB;;;IAC5D,sEAAkC;IAAA,mEAA4B;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,mFAAkB;;;IAGhF,qEAAwC;IACtC,qEAA+E;IACjF,4DAAK;;;IADyB,0DAAc;IAAd,wIAAc;;;IAF9C,yEAA0F;IACxF,0HAEK;IACP,4DAAK;;;IAHiB,0DAAkB;IAAlB,wFAAkB;;;;IAarC,6EAAuH;IAA1B,iaAAyB;IACvH,uEAAM;IAAA,mEAAG;IAAA,4DAAO;IACpB,4DAAS;;;;IACP,6EAAkI;IAAnC,0aAAkC;IAC/H,uEAAM;IAAA,sEAAM;IAAA,4DAAO;IACvB,4DAAS;;;;IAtCb,0EAA0F;IACxF,0EAAuB;IACrB,0EAAiD;IAC/C,2EAA+E;IAAA,uDAAkB;IAAA,4DAAO;IAG1G,4DAAM;IACN,kHAA+D;IAC/D,sHAGM;IACN,0EAA+D;IAC7D,0EAAiC;IAC/B,sHAAoG;IACpG,wHACkE;IAClE,wHAAsF;IACxF,4DAAM;IACN,sHAIK;IAEP,4DAAM;IAEN,2EAAkD;IAChD,uEAAK;IACH,8EAAiH;IAA9C,kZAA6C;IAC9G,wEAAM;IAAA,sEAAK;IAAA,4DAAO;IACtB,4DAAS;IAEN,8HAEI;IACP,8HAEO;IACT,8EAAiH;IAA/C,mZAA8C;IAC9G,wEAAM;IAAA,gEAAI;IAAA,4DAAO;IACrB,4DAAS;IACL,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;;;IA7CuD,qFAA4B;IAG/C,0DAA0C;IAA1C,gHAA0C;IAAC,0DAAkB;IAAlB,mFAAkB;IAI/F,0DAAiC;IAAjC,iGAAiC;IAC/B,0DAAkC;IAAlC,kGAAkC;IAMjB,0DAA0B;IAA1B,0FAA0B;IAC1B,0DAA6B;IAA7B,6FAA6B;IAE1C,0DAA0B;IAA1B,0FAA0B;IAEkC,0DAAoB;IAApB,oFAAoB;IAc5E,0DAAyB;IAAzB,kGAAyB;IAG5B,0DAAyB;IAAzB,kGAAyB;;;IA2BpC,oEAAuC;IAAA,uDAAoB;IAAA,4DAAI;;;IAAxB,0DAAoB;IAApB,qFAAoB;;;IAC3D,0EACqE;IACnE,qEAA0D;IAC5D,4DAAM;;;IADC,0DAAwB;IAAxB,kJAAwB;;;IAI3B,0EAA+C;IAAA,mEAA6B;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,mFAAkB;;;IAC9F,0EAAkD;IAAA,mEACX;IAAA,uDAAqB;IAAA,4DAAM;;;IAA3B,0DAAqB;IAArB,sFAAqB;;;IAC5D,sEAAkC;IAAA,mEAA4B;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,mFAAkB;;;IAGhF,qEAAwC;IACtC,qEAA+E;IACjF,4DAAK;;;IADyB,0DAAc;IAAd,wIAAc;;;IAF9C,yEAA0F;IACxF,0HAEK;IACP,4DAAK;;;IAHiB,0DAAkB;IAAlB,wFAAkB;;;;IAYrC,6EAAuH;IAA1B,iaAAyB;IACvH,uEAAM;IAAA,mEAAG;IAAA,4DAAO;IACpB,4DAAS;;;;IACP,6EAAkI;IAAnC,0aAAkC;IAC/H,uEAAM;IAAA,sEAAM;IAAA,4DAAO;IACvB,4DAAS;;;;IApCb,0EAAyF;IACvF,0EAAuB;IACrB,0EAAiD;IAC/C,2EAA+E;IAAA,uDAAkB;IAAA,4DAAO;IAE1G,4DAAM;IACN,kHAA+D;IAC/D,sHAGM;IACN,0EAA+D;IAC7D,0EAAiC;IAC/B,sHAAoG;IACpG,wHACkE;IAClE,wHAAsF;IACxF,4DAAM;IACN,sHAIK;IAEP,4DAAM;IACN,2EAAkD;IAChD,uEAAK;IACH,8EAAiH;IAA9C,kZAA6C;IAC9G,wEAAM;IAAA,sEAAK;IAAA,4DAAO;IACtB,4DAAS;IAEN,8HAEI;IACP,8HAEO;IACT,8EAAiH;IAA/C,mZAA8C;IAC9G,wEAAM;IAAA,gEAAI;IAAA,4DAAO;IACrB,4DAAS;IACL,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;;;IA3CsD,qFAA4B;IAG9C,0DAA0C;IAA1C,gHAA0C;IAAC,0DAAkB;IAAlB,mFAAkB;IAG/F,0DAAiC;IAAjC,iGAAiC;IAC/B,0DAAkC;IAAlC,kGAAkC;IAMjB,0DAA0B;IAA1B,0FAA0B;IAC1B,0DAA6B;IAA7B,6FAA6B;IAE1C,0DAA0B;IAA1B,0FAA0B;IAEkC,0DAAoB;IAApB,oFAAoB;IAa5E,0DAAyB;IAAzB,kGAAyB;IAG5B,0DAAyB;IAAzB,kGAAyB;;;IA2BpC,oEAAuC;IAAA,uDAAoB;IAAA,4DAAI;;;IAAxB,0DAAoB;IAApB,qFAAoB;;;IAC3D,0EACqE;IACnE,qEAA0D;IAC5D,4DAAM;;;IADC,0DAAwB;IAAxB,kJAAwB;;;IAI3B,0EAA+C;IAAA,mEAA6B;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,mFAAkB;;;IAC9F,0EAAkD;IAAA,mEACX;IAAA,uDAAqB;IAAA,4DAAM;;;IAA3B,0DAAqB;IAArB,sFAAqB;;;IAC5D,sEAAkC;IAAA,mEAA4B;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,mFAAkB;;;IAGhF,qEAAwC;IACtC,qEAA+E;IACjF,4DAAK;;;IADyB,0DAAc;IAAd,wIAAc;;;IAF9C,yEAA0F;IACxF,0HAEK;IACP,4DAAK;;;IAHiB,0DAAkB;IAAlB,wFAAkB;;;;IAYtC,6EAA6I;IAA/C,+bAA8C;IAC1I,uEAAM;IAAA,kEAAO;IAAA,4DAAO;IACxB,4DAAS;;;;IAjCf,0EAAyF;IACvF,0EAAuB;IACrB,0EAAiD;IAC/C,2EAA+E;IAAA,uDAAkB;IAAA,4DAAO;IAE1G,4DAAM;IACN,kHAA+D;IAC/D,sHAGM;IACN,0EAA+D;IAC7D,0EAAiC;IAC/B,sHAAoG;IACpG,wHACkE;IAClE,wHAAsF;IACxF,4DAAM;IACN,sHAIK;IAEP,4DAAM;IACN,2EAAkD;IAEhD,uEAAK;IACH,8EAA4F;IAA1B,2XAAyB;IACzF,wEAAM;IAAA,oEAAG;IAAA,4DAAO;IACpB,4DAAS;IACP,8HAEO;IACT,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;;;IArCsD,qFAA4B;IAG9C,0DAA0C;IAA1C,gHAA0C;IAAC,0DAAkB;IAAlB,mFAAkB;IAG/F,0DAAiC;IAAjC,iGAAiC;IAC/B,0DAAkC;IAAlC,kGAAkC;IAMjB,0DAA0B;IAA1B,0FAA0B;IAC1B,0DAA6B;IAA7B,6FAA6B;IAE1C,0DAA0B;IAA1B,0FAA0B;IAEkC,0DAAoB;IAApB,oFAAoB;IAa7E,0DAAyB;IAAzB,kGAAyB;;ADjOlD;IA+BE,4BAAoB,cAA8B,EAAU,KAAiB,EAClE,gBAAkC,EAAU,YAAsB,EAClE,GAAsB,EAAS,IAAgB;QAF1D,iBAuBC;QAvBmB,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAY;QAClE,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,iBAAY,GAAZ,YAAY,CAAU;QAClE,QAAG,GAAH,GAAG,CAAmB;QAAS,SAAI,GAAJ,IAAI,CAAY;QApB1D,QAAG,GAAG,YAAY,CAAC;QACnB,cAAS,GAAG,EAAE,CAAC;QAWf,QAAG,GAAK,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAIpC,WAAM,GAAoD,EAAE,CAAC;QAOzD,IAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,qDAAqD,CAAC;QACtG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,SAAS,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1C,KAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;QAGH,IAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,iDAAiD,GAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAE/H,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YACxC,KAAI,CAAC,KAAK,GAAC,IAAI,CAAC;YAChB,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;QAEL,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;aAC1B,SAAS,CAAC,UAAC,EAAc;gBAAZ,EAAE,UAAE,MAAM;YAEtB,KAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC;QAC9D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAY,GAAZ;QAAA,iBAeC;QAVC,IAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,iDAAiD,GAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAC,aAAa,GAAC,IAAI,CAAC,eAAe,CAAC;QAGvK,IAAI,CAAC,KAAK,GAAC,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YACzC,KAAI,CAAC,KAAK,GAAC,IAAI,CAAC;YAChB,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IAGP,CAAC;IAGD,qCAAQ,GAAR,UAAS,KAAK;QACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAClB,CAAC;IAEH,sCAAS,GAAT;QAME,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAU,IAAK,WAAI,CAAC,MAAM,KAAK,QAAQ,EAAxB,CAAwB,CAAC,CAAC;QAClF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAU,IAAK,WAAI,CAAC,MAAM,KAAK,WAAW,EAA3B,CAA2B,CAAC,CAAC;QACvF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAU,IAAK,WAAI,CAAC,MAAM,KAAK,WAAW,EAA3B,CAA2B,CAAC,CAAC;QACtF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAU,IAAK,WAAI,CAAC,MAAM,KAAK,YAAY,EAA5B,CAA4B,CAAC,CAAC;QACvF,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;IAC1B,CAAC;IAGD,qCAAQ,GAAR;QAAA,iBAwCC;QAtCC,IAAI,CAAC,UAAU,GAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,wDAAwD,CAAC;QAKvG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI;YAClD,KAAI,CAAC,YAAY,GAAC,IAAI,CAAC;YAEvB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,KAAI,CAAC,YAAY,CAAC,MAAM,EAAC,CAAC,EAAE,EAC1C;gBACE,IAAI,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,IAAE,SAAS,IAAI,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,IAAE,UAAU,IAAI,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,IAAE,SAAS,EACpJ;oBAEE,IAAI,QAAQ,GAAG,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACzD,IAAI,SAAS,GAAG,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAE3D,IAAI,UAAU,GAAkD,EAAE,CAAC;oBAEnE,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,SAAS,CAAC,MAAM,EAAC,CAAC,EAAE,EAClC;wBACE,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,EAAC,KAAK,EAAC,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;qBAC7F;oBAID,KAAI,CAAC,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAC,UAAU,CAAC;iBAEzD;aAEF;QAID,CAAC,CAAC,CAAC;IAKL,CAAC;IAED,qCAAQ,GAAR,UAAS,IAAU;QAEjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gFAAkB,CAAC,CAAC;QAC5D,QAAQ,CAAC,iBAAiB,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,mBAAmB;QAChE,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,EAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,MAAM,EAAC,IAAI,CAAC,MAAM,EAAC,MAAM,EAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,qBAAqB;QAEpK,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YAE1B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC;YAC9B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC;YAClC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAI9B,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;YACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAgB,GAAhB,UAAiB,EAAU,EAAE,MAAc,EAAE,IAAW;QACtD,IAAI,UAAU,GAAG,SAAS,CAAC;QAE3B,IAAI,MAAM,KAAK,QAAQ,EAAE;YACvB,UAAU,GAAG,SAAS;SACvB;aACI,IAAI,MAAM,KAAK,WAAW,EAAE;YAC/B,UAAU,GAAG,SAAS;SACvB;aACI,IAAI,MAAM,KAAK,WAAW,EAAE;YAC/B,UAAU,GAAG,SAAS;SACvB;aACI,IAAI,MAAM,KAAK,YAAY,EAAE;YAChC,UAAU,GAAG,MAAM;SACpB;QAED,IAAI,WAAiB,CAAC;QAEtB,IAAI,IAAI,EAAE;YACR,WAAW,GAAG,IAAI,CAAC;SACpB;aACI;YACH,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,IAAI,CAAC,EAAE,EAAf,CAAe,CAAC,CAAC;YACrD,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;SAEzB;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC5C,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC;QAC5B,WAAW,CAAC,UAAU,GAAG,UAAU,CAAC;QACpC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAEnB,IAAM,eAAe,GAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,qDAAqD,GAAC,MAAM,GAAC,SAAS,GAAC,WAAW,CAAC,MAAM,CAAC;QAC9I,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;QAElD,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IACD,iCAAI,GAAJ,UAAK,OAAO;QAAZ,iBAMD;QALG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YAC/C,KAAI,CAAC,WAAW,GAAG,kBAAgB,MAAQ,CAAC;QAChD,CAAC,EAAE,UAAC,MAAM;YACN,KAAI,CAAC,WAAW,GAAG,eAAa,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAG,CAAC;QACpE,CAAC,CAAC,CAAC;IACP,CAAC;IAGO,6CAAgB,GAAxB,UAAyB,MAAW;QAClC,IAAI,MAAM,KAAK,+EAAuB,EAAE;YACpC,OAAO,iBAAiB,CAAC;SAC5B;aAAM,IAAI,MAAM,KAAK,0FAAkC,EAAE;YACtD,OAAO,2BAA2B,CAAC;SACtC;aAAM;YACH,OAAO,WAAS,MAAQ,CAAC;SAC5B;IACH,CAAC;IAID,uCAAU,GAAV,UAAW,EAAE,EAAC,OAAO,EAAC,MAAM;QAG1B,2CAA2C;QAC3C,2CAA2C;QAJ7C,iBAqBC;QAfC,IAAI,QAAQ,GAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0FAAqB,EAAE,EAAC,QAAQ,EAAE,QAAQ,EAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAGhI,QAAQ,CAAC,iBAAiB,CAAC,SAAS,GAAG,EAAC,WAAW,EAAC,EAAE,EAAC,SAAS,EAAC,KAAK,EAAC,WAAW,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,CAAC;QAElH,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YAE1B,IAAI,MAAM,IAAE,QAAQ,EACpB;aACC;QAEJ,CAAC,EAAE,UAAC,MAAM;YACP,KAAI,CAAC,WAAW,GAAG,eAAa,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAG,CAAC;QACnE,CAAC,CAAC,CAAC;IAEJ,CAAC;IAEC,uCAAU,GAAV,UAAW,EAAU;QAArB,iBAUC;QARC,0DAA0D;QAC1D,wCAAwC;QACxC,+BAA+B;QAC/B,mBAAmB;QACnB,IAAM,OAAO,GAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,+CAA+C,GAAC,EAAE,CAAC;QAC/F,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YACxC,KAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAO,GAAP;QAAA,iBAaC;QAZC,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gFAAkB,CAAC,CAAC;QAC5D,QAAQ,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,mBAAmB;QACtD,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,qBAAqB;QAEnG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YAC1B,KAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;gBACxF,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,KAAI,CAAC,SAAS,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;YACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAU,GAAV;QAAA,iBAMC;QALC,IAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,iDAAiD,GAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC7H,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YACxC,KAAI,CAAC,KAAK,GAAC,IAAI,CAAC;YAChB,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uCAAU,GAAV,UAAW,MAAM,EAAC,EAAE;QAApB,iBAkBC;QAhBC,IAAI,MAAM,KAAK,QAAQ,EAAE;YACvB,MAAM,GAAG,WAAW;SACrB;aACI,IAAI,MAAM,KAAK,WAAW,EAAE;YAC/B,MAAM,GAAG,WAAW;SACrB;aACI,IAAI,MAAM,KAAK,WAAW,EAAE;YAC/B,MAAM,GAAG,YAAY;SACtB;QAGD,IAAM,eAAe,GAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,qDAAqD,GAAC,MAAM,GAAC,SAAS,GAAC,EAAE,CAAC;QAC9H,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;YAChD,KAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,wCAAW,GAAX,UAAY,MAAM,EAAC,EAAE;QAArB,iBAgBC;QAfC,IAAI,MAAM,KAAK,WAAW,EAAE;YAC1B,MAAM,GAAG,QAAQ;SAClB;aACI,IAAI,MAAM,KAAK,WAAW,EAAE;YAC/B,MAAM,GAAG,WAAW;SACrB;aACI,IAAI,MAAM,KAAK,YAAY,EAAE;YAChC,MAAM,GAAG,WAAW;SACrB;QAGD,IAAM,eAAe,GAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,qDAAqD,GAAC,MAAM,GAAC,SAAS,GAAC,EAAE,CAAC;QAC9H,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;YAChD,KAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAS,GAAT;QAEE,4CAA4C;QAC5C,2CAA2C;QAH7C,iBAwBC;QAnBC,IAAI,QAAQ,GAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0FAAqB,EAAE,EAAC,QAAQ,EAAE,QAAQ,EAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAEhI,QAAQ,CAAC,iBAAiB,CAAC,SAAS,GAAG,EAAC,WAAW,EAAC,EAAE,EAAC,SAAS,EAAC,KAAK,EAAC,WAAW,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,CAAC;QAElH,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YAE1B,IAAI,MAAM,IAAE,QAAQ,EACpB;gBACE,KAAI,CAAC,UAAU,EAAE,CAAC;aAEnB;QAEJ,CAAC,EAAE,UAAC,MAAM;YACP,KAAI,CAAC,WAAW,GAAG,eAAa,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAG,CAAC;QACnE,CAAC,CAAC,CAAC;IAKJ,CAAC;IAID,wCAAW,GAAX;QAEE,4CAA4C;QAC5C,2CAA2C;QAH7C,iBAwBC;QAnBC,IAAI,QAAQ,GAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0FAAqB,EAAE,EAAC,QAAQ,EAAE,QAAQ,EAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAEhI,QAAQ,CAAC,iBAAiB,CAAC,SAAS,GAAG,EAAC,WAAW,EAAC,EAAE,EAAC,SAAS,EAAC,KAAK,EAAC,WAAW,EAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,CAAC;QAElH,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YAE1B,IAAI,MAAM,IAAE,QAAQ,EACpB;gBACE,KAAI,CAAC,UAAU,EAAE,CAAC;aAEnB;QAEJ,CAAC,EAAE,UAAC,MAAM;YACP,KAAI,CAAC,WAAW,GAAG,eAAa,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAG,CAAC;QACnE,CAAC,CAAC,CAAC;IAKJ,CAAC;wFAtWU,kBAAkB;oHAAlB,kBAAkB;;;;;;;yFAJlB,CAAC,gEAAgB,CAAC;YCd/B,6EAA8C;YAC5C,yEAAiB;YACf,yEAA+B;YAC7B,yEAAkB;YAChB,4EAAyE;YAAtB,0IAAS,eAAW,IAAC;YACtE,0EAAwC;YACtC,kEAA4B;YAC5B,uEAAM;YAAA,oEAAS;YAAA,4DAAO;YACxB,4DAAO;YACT,4DAAS;YAGX,4DAAM;YAER,4DAAM;YAGR,4DAAM;YAEN,yEAAiB;YACf,0EAAsC;YACpC,yEAAsB;YACpB,2EAAwC;YACtC,mEAA4B;YAC5B,wEAAM;YAAA,uEAAM;YAAA,4DAAO;YACrB,4DAAO;YACT,4DAAK;YACL,2EAAqG;YAEnG,mHAmDM;YACR,4DAAM;YACR,4DAAM;YAEN,0EAAsC;YACpC,yEAAsB;YACpB,2EAAwC;YACtC,oEAA+B;YAC/B,wEAAM;YAAA,0EAAS;YAAA,4DAAO;YACxB,4DAAO;YACT,4DAAK;YACL,2EAA0G;YACxG,mHA6CM;YACR,4DAAM;YACR,4DAAM;YAEN,0EAAsC;YACpC,yEAAsB;YACpB,2EAAwC;YACtC,oEAAmC;YACnC,wEAAM;YAAA,+EAAS;YAAA,4DAAO;YACxB,4DAAO;YACT,4DAAK;YACL,2EAAyG;YACvG,mHA2CM;YACR,4DAAM;YACR,4DAAM;YAEN,0EAAsC;YACpC,yEAAsB;YACpB,2EAAwC;YACtC,oEAAiC;YACjC,wEAAM;YAAA,2EAAU;YAAA,4DAAO;YACzB,4DAAO;YACT,4DAAK;YACL,2EAA0G;YACxG,mHAqCM;YACR,4DAAM;YACR,4DAAM;YACR,4DAAM;YACR,4DAAU;;YA1N4B,2DAAwB;YAAxB,iFAAwB;YAEd,0DAAiB;YAAjB,uFAAiB;YA8D3B,0DAAwB;YAAxB,iFAAwB;YACd,0DAAmB;YAAnB,yFAAmB;YAwD7B,0DAAwB;YAAxB,iFAAwB;YACd,0DAAkB;YAAlB,wFAAkB;YAsD5B,0DAAwB;YAAxB,iFAAwB;YACd,0DAAkB;YAAlB,wFAAkB;;6BD7MlE;CA2XC;AAxW8B;;;;;;;;;;;;;;;;;;;;;;;;AElBgB;AAEH;AACW;AACW;AAEE;AAET;AACY;AACjB;;;AACtD;IAAA;KAegC;kFAAnB,eAAe;gHAAf,eAAe;oHAdf;gBACL,yDAAY;gBACZ,6EAAsB;gBACtB,8DAAqB,EAAE;gBACvB,uDAAW;gBACX,gEAAc;gBACd,+DAAmB;gBACnB,iEAAS;aACZ;0BArBL;CA2BgC;AAAJ;mIAAf,eAAe,mBAJpB,oEAAkB;QAClB,gFAAkB,aAVlB,yDAAY;QACZ,6EAAsB,0DAEtB,uDAAW;QACX,gEAAc;QACd,+DAAmB;QACnB,iEAAS;;;;;;;;;;;;;;;;;;AClBqB;AACC;;AAGvC;IAGE;QAEO,UAAK,GAAW,EAItB,CAAC;IANc,CAAC;IASjB,qCAAU,GAAV,UAAW,KAAa,EAAE,OAAe,EAAE,IAAY;QAErD,IAAI,UAAU,GAAG,SAAS,CAAC;QAE3B,IAAG,IAAI,KAAK,WAAW,EAAE;YACvB,UAAU,GAAG,SAAS;SACvB;aACI,IAAG,IAAI,KAAK,cAAc,EAAE;YAC/B,UAAU,GAAG,SAAS;SACvB;aACI,IAAG,IAAI,KAAK,YAAY,EAAE;YAC7B,UAAU,GAAG,SAAS;SACvB;aACI,IAAG,IAAI,KAAK,YAAY,EAAE;YAC7B,UAAU,GAAG,MAAM;SACpB;QAGD,IAAI,IAAI,GAAS;YACf,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,WAAW,CAAC;YAC/C,SAAS,EAAE,KAAK;YAChB,WAAW,EAAE,OAAO;YACpB,SAAS,EAAE,QAAQ;YACnB,SAAS,EAAE,mBAAmB;YAC9B,UAAU,EAAE,CAAC,0CAA0C,CAAC;YACxD,MAAM,EAAE,IAAI;YACZ,UAAU,EAAE,UAAU;YACtB,WAAW,EAAE,MAAM;YACnB,YAAY,EAAE,EAAE;YAChB,SAAS,EAAE,EAAE;YACb,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,IAAI;SAChB;QACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzB,OAAO,wCAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,qDAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAEjD,CAAC;oFAjDU,gBAAgB;qHAAhB,gBAAgB,WAAhB,gBAAgB;2BAP7B;CA0DC;AAnD4B","sources":["./src/app/taskboard/taskboard-routing.module.ts","./src/app/taskboard/taskboard.component.ts","./src/app/taskboard/taskboard.component.html","./src/app/taskboard/taskboard.module.ts","./src/app/taskboard/taskboard.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TaskboardComponent } from './taskboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n     component: TaskboardComponent,\r\n    data: {\r\n      title: 'Taskboard'\r\n    },\r\n    \r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TaskboardRoutingModule { }","import { Component, ViewEncapsulation, ViewChild, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { TaskBoardService } from './taskboard.service';\r\nimport { CrudModalComponent } from './crud-modal/crud-modal.component';\r\nimport { Task } from './taskboard.model';\r\nimport { DragulaService } from 'ng2-dragula';\r\nimport { NewrecordrowComponent } from 'app/newrecordrow/newrecordrow.component';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {NgSelectModule, NgOption} from '@ng-select/ng-select';\r\n\r\n@Component({\r\n  selector: 'app-taskboard',\r\n  templateUrl: './taskboard.component.html',\r\n  styleUrls: ['./taskboard.component.scss'],\r\n  providers: [TaskBoardService],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TaskboardComponent {\r\n\r\n  @ViewChild('marketingTitle') titleInputRef: ElementRef;\r\n  @ViewChild('marketingMessage') messageInputRef: ElementRef;\r\n\r\n  BAG = \"task-group\";\r\n  departman = [];\r\nselectedDep: any;\r\nblokalanlari:any[];\r\n\r\nSERVER_URL:any;\r\n\r\n  tasks: Task[];\r\n  marketingTasks: Task[];\r\n  uiDesigningTasks: Task[];\r\n  developingTasks: Task[];\r\n  managementTasks: Task[];\r\n  adi:any=localStorage.getItem('adi');\r\n  closeResult: string;\r\n  ilgilidepartman:any[];\r\n\r\n  cities:Array<{id: string, name: string,field:string}>[] = []; \r\n\r\n  constructor(private dragulaService: DragulaService, private elRef: ElementRef,\r\n     private taskBoardService: TaskBoardService, private modalService: NgbModal,\r\n     private ref: ChangeDetectorRef,private http: HttpClient) {\r\n    \r\n\r\n      const departUrl = localStorage.getItem('url') + \"angular/dataservis.php?page_id=formgetir&formid=320\";\r\n      this.http.get<any>(departUrl).subscribe(data => {\r\n        this.departman=data;\r\n      });\r\n  \r\n\r\n      const taskUrl = localStorage.getItem('url') + \"angular/dataservis.php?page_id=todopage&userid=\"+localStorage.getItem('userid');\r\n\r\n      this.http.get<any>(taskUrl).subscribe(data => {\r\n        this.tasks=data;\r\n        this.loadTasks();\r\n      });\r\n  \r\n    dragulaService.drop(this.BAG)\r\n      .subscribe(({ el, target }) => {\r\n \r\n        this.updateTaskStatus(el.getAttribute('task-id'), target.id)\r\n      });\r\n  }\r\n\r\n  yenidenyukle()\r\n  {\r\n  \r\n\r\n\r\n    const taskUrl2 = localStorage.getItem('url') + \"angular/dataservis.php?page_id=todopage&userid=\"+localStorage.getItem('userid')+\"&departman=\"+this.ilgilidepartman;\r\n\r\n   \r\nthis.tasks=[];\r\n      this.http.get<any>(taskUrl2).subscribe(data => {\r\n        this.tasks=data;\r\n        this.loadTasks();\r\n      });\r\n\r\n\r\n  }\r\n\r\n\r\n  onChange(event){\r\n   console.log(event);\r\n    }\r\n\r\n  loadTasks() {\r\n\r\n\r\n    \r\n\r\n    \r\n    this.marketingTasks = this.tasks.filter((task: Task) => task.status === 'Atandı');\r\n    this.uiDesigningTasks = this.tasks.filter((task: Task) => task.status === 'Yapılacak');\r\n    this.developingTasks = this.tasks.filter((task: Task) => task.status === 'Yapılıyor');\r\n    this.managementTasks = this.tasks.filter((task: Task) => task.status === 'Tamamlandı');\r\n    this.ref.markForCheck();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this.SERVER_URL=localStorage.getItem('url') + \"angular/dataservis.php?page_id=formalanlari&formid=381\";\r\n\r\n\r\n  \r\n\r\n    this.http.get<any>(this.SERVER_URL).subscribe(data => {\r\n    this.blokalanlari=data;\r\n\r\n    for(var i=0;i<this.blokalanlari.length;i++)\r\n    {\r\n      if (this.blokalanlari[i].verigiristuru=='FixList' || this.blokalanlari[i].verigiristuru=='Combobox' || this.blokalanlari[i].verigiristuru=='Secimli')\r\n      {\r\n       \r\n        var splitted = this.blokalanlari[i].degerleri.split(\";\"); \r\n        var splitted2 = this.blokalanlari[i].etiketleri.split(\";\"); \r\n\r\n        var cities_psh:Array<{id: string, name: string,field:string}> = []; \r\n\r\n        for(var k=0;k<splitted2.length;k++)\r\n        {  \r\n          cities_psh.push({ id: splitted[k], name: splitted2[k],field:this.blokalanlari[i].alanadi });\r\n        }\r\n\r\n\r\n\r\n        this.cities[this.blokalanlari[i].alan_index]=cities_psh;\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n  \r\n    });\r\n\r\n\r\n  \r\n  \r\n  }\r\n\r\n  editTask(task: Task) {\r\n\r\n    console.log(task);\r\n    const modalRef = this.modalService.open(CrudModalComponent);\r\n    modalRef.componentInstance.id = task.taskId; // should be the id\r\n    modalRef.componentInstance.data = { title: task.taskTitle, message: task.taskMessage,belge:task.belge,belge2:task.belge2,belge3:task.belge3 }; // should be the data\r\n\r\n    modalRef.result.then((result) => {\r\n\r\n      task.taskTitle = result.title;\r\n      task.taskMessage = result.message;\r\n      task.belge = result.belge;\r\n      task.belge2 = result.belge2;\r\n      task.belge3 = result.belge3;\r\n\r\n\r\n\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  updateTaskStatus(id: string, status: string, task?: Task) {\r\n    let badgeClass = 'primary';\r\n\r\n    if (status === 'Atandı') {\r\n      badgeClass = 'primary'\r\n    }\r\n    else if (status === 'Yapılacak') {\r\n      badgeClass = 'warning'\r\n    }\r\n    else if (status === 'Yapılıyor') {\r\n      badgeClass = 'success'\r\n    }\r\n    else if (status === 'Tamamlandı') {\r\n      badgeClass = 'info'\r\n    }\r\n\r\n    let currentTask: Task;\r\n\r\n    if (task) {\r\n      currentTask = task;\r\n    }\r\n    else {\r\n      currentTask = this.tasks.find(x => x.taskId == +id);\r\n     console.log(currentTask);\r\n\r\n    }\r\n\r\n    let index = this.tasks.indexOf(currentTask);\r\n    currentTask.status = status;\r\n    currentTask.badgeClass = badgeClass;\r\n    this.tasks.splice(index, 1, currentTask);\r\n    console.log(index);\r\n\r\n    const taskGuncelleUrl=localStorage.getItem('url') + \"angular/dataservis.php?page_id=todoguncelle&durumu=\"+status+\"&index=\"+currentTask.taskId;\r\n    this.http.get<any>(taskGuncelleUrl).subscribe(data=>{\r\n\r\n    });\r\n\r\n\r\n    this.loadTasks();\r\n  }\r\n  open(content) {\r\n    this.modalService.open(content).result.then((result) => {\r\n        this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n}\r\n\r\n\r\nprivate getDismissReason(reason: any): string {\r\n  if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n  } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n  } else {\r\n      return `with: ${reason}`;\r\n  }\r\n}\r\n\r\n\r\n\r\neditrecord(id,formids,blokid)\r\n{\r\n\r\n  // localStorage.setItem('rowformid','381');\r\n  // localStorage.setItem('rowrecordid', id);\r\n\r\n  var modalSat  = this.modalService.open(NewrecordrowComponent, {backdrop: 'static',size: 'lg', keyboard: false, centered: true});\r\n   \r\n\r\n  modalSat.componentInstance.Modaldata = {mastervalue:'',rowformid:'381',rowrecordid:id,formtanimi:'',subformid:''};\r\n  \r\n  modalSat.result.then((result) => {\r\n    \r\n    if (result=='Yenile')\r\n    {\r\n    }\r\n\r\n }, (reason) => {\r\n    this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n });\r\n\r\n}\r\n\r\n  deleteTask(id: number) {\r\n\r\n    // let task: Task = this.tasks.find(x => x.taskId === id);\r\n    // let index = this.tasks.indexOf(task);\r\n    // this.tasks.splice(index, 1);\r\n    // console.log(id);\r\n    const taskSil=localStorage.getItem('url') + \"angular/dataservis.php?page_id=todosil&index=\"+id;\r\n    this.http.get<any>(taskSil).subscribe(data=>{\r\n      this.taskYenile();\r\n    });\r\n  }\r\n\r\n  addTask() {\r\n    const modalRef = this.modalService.open(CrudModalComponent);\r\n    modalRef.componentInstance.id = 0; // should be the id\r\n    modalRef.componentInstance.data = { title: '', message: '', type: 'Atandı' }; // should be the data\r\n\r\n    modalRef.result.then((result) => {\r\n      this.taskBoardService.addNewTask(result.title, result.message, result.type).subscribe(data => {\r\n        this.tasks = data;\r\n        this.loadTasks();\r\n      });\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  taskYenile(){\r\n    const taskUrl = localStorage.getItem('url') + \"angular/dataservis.php?page_id=todopage&userid=\"+localStorage.getItem('userid');\r\n      this.http.get<any>(taskUrl).subscribe(data => {\r\n        this.tasks=data;\r\n        this.loadTasks();\r\n      });\r\n  }\r\n\r\n  gorevBasla(status,id){\r\n\r\n    if (status === 'Atandı') {\r\n      status = 'Yapılacak'\r\n    }\r\n    else if (status === 'Yapılacak') {\r\n      status = 'Yapılıyor'\r\n    }\r\n    else if (status === 'Yapılıyor') {\r\n      status = 'Tamamlandı'\r\n    }\r\n   \r\n\r\n    const taskGuncelleUrl=localStorage.getItem('url') + \"angular/dataservis.php?page_id=todoguncelle&durumu=\"+status+\"&index=\"+id;\r\n    this.http.get<any>(taskGuncelleUrl).subscribe(data=>{\r\n      this.taskYenile();\r\n    });\r\n\r\n  }\r\n\r\n  gorevGeriAl(status,id){\r\n    if (status === 'Yapılacak') {\r\n      status = 'Atandı'\r\n    }\r\n    else if (status === 'Yapılıyor') {\r\n      status = 'Yapılacak'\r\n    }\r\n    else if (status === 'Tamamlandı') {\r\n      status = 'Yapılıyor'\r\n    }\r\n   \r\n\r\n    const taskGuncelleUrl=localStorage.getItem('url') + \"angular/dataservis.php?page_id=todoguncelle&durumu=\"+status+\"&index=\"+id;\r\n    this.http.get<any>(taskGuncelleUrl).subscribe(data=>{\r\n      this.taskYenile();\r\n    });\r\n  }\r\n\r\n  satirekle()\r\n  {\r\n    // localStorage.setItem('rowformid', '381');\r\n    // localStorage.setItem('rowrecordid', \"\");\r\n  \r\n    var modalSat  = this.modalService.open(NewrecordrowComponent, {backdrop: 'static',size: 'lg', keyboard: false, centered: true});\r\n   \r\n    modalSat.componentInstance.Modaldata = {mastervalue:'',rowformid:'381',rowrecordid:'',formtanimi:'',subformid:''};\r\n    \r\n    modalSat.result.then((result) => {\r\n      \r\n      if (result=='Yenile')\r\n      {\r\n        this.taskYenile();\r\n\r\n      }\r\n  \r\n   }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n   });\r\n  \r\n  \r\n    \r\n  \r\n  }\r\n  \r\n\r\n\r\n  ziyaretekle()\r\n  {\r\n    // localStorage.setItem('rowformid', '381');\r\n    // localStorage.setItem('rowrecordid', \"\");\r\n  \r\n    var modalSat  = this.modalService.open(NewrecordrowComponent, {backdrop: 'static',size: 'lg', keyboard: false, centered: true});\r\n   \r\n    modalSat.componentInstance.Modaldata = {mastervalue:'',rowformid:'696',rowrecordid:'',formtanimi:'',subformid:''};\r\n    \r\n    modalSat.result.then((result) => {\r\n      \r\n      if (result=='Yenile')\r\n      {\r\n        this.taskYenile();\r\n\r\n      }\r\n  \r\n   }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n   });\r\n  \r\n  \r\n    \r\n  \r\n  }\r\n\r\n}\r\n","<!-- Taskboard Starts -->\r\n<section id=\"taskboard\" class=\"app-taskboard\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-2 col-sm-2\">\r\n      <div class=\"my-3\">\r\n        <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"satirekle()\">\r\n          <span class=\"d-flex align-items-center\">\r\n            <i class=\"ft-plus mr-1\"></i>\r\n            <span>Yeni Ekle</span>\r\n          </span>\r\n        </button>\r\n\r\n       \r\n      </div>\r\n\r\n    </div>\r\n  \r\n\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-3 col-sm-6 col-12\">\r\n      <h5 class=\"mt-2 mb-0\">\r\n        <span class=\"d-flex align-items-center\">\r\n          <i class=\"ft-cast mr-2\"></i>\r\n          <span>Atandı</span>\r\n        </span>\r\n      </h5>\r\n      <div class='dragdrop-container' [dragula]='\"task-group\"' id=\"Atandı\" [dragulaModel]='marketingTasks'>\r\n\r\n        <div class=\"card mb-3\" *ngFor='let task of marketingTasks' [attr.task-id]=\"task.taskId\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between mb-2\">\r\n              <span style=\"white-space: normal;\" class=\"badge bg-light-{{task.badgeClass}}\">{{task.taskTitle}}</span>\r\n              <!-- <div *ngIf=\"task.createdBy==adi\">\r\n               <i class=\"ft-edit mr-1 primary cursor-pointer\" (click)=\"editrecord(task.taskId);\"></i>\r\n             <i class=\"ft-trash-2 danger cursor-pointer\" (click)=\"deleteTask(task.taskId);\"></i>\r\n              </div> -->\r\n              <!-- <div *ngIf=\"task.createdBy!=adi\">\r\n                <i class=\"ft-eye mr-1 primary cursor-pointer\" (click)=\"editTask(task);\"></i>\r\n                  <i class=\"ft-trash-2 danger cursor-pointer\" (click)=\"deleteTask(task.taskId);\"></i>\r\n               </div> -->\r\n            </div>\r\n            <p *ngIf=\"task.messageType === 'text'\" >{{task.taskMessage | slice:0:50 }}...</p>\r\n            <div *ngIf=\"task.messageType === 'image'\"\r\n              class=\"d-flex justify-content-center overflow-hidden rounded my-3\">\r\n              <img [src]=\"task.taskMessage\" alt=\"ToDo Pic\" height=\"350\">\r\n            </div>\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <div class=\"d-flex font-small-2\">\r\n                <div class=\"mr-2\" *ngIf=\"task.createdOn != ''\"><i class=\"ft-clock mr-1\"></i>{{task.createdOn}}</div>\r\n                <div class=\"mr-2\" *ngIf=\"task.messageCount != ''\"><i\r\n                    class=\"ft-message-square mr-1\"></i>{{task.messageCount}}</div>\r\n                <div *ngIf=\"task.linkCount != ''\"><i class=\"ft-link mr-1\"></i>{{task.linkCount}}</div>\r\n              </div>\r\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"task.isUserImg\">\r\n                <li *ngFor=\"let img of task.assignedTo\">\r\n                  <img class=\"rounded-circle\" [src]=\"img.re\" alt=\"Avatar\" height=\"24\" width=\"24\">\r\n                </li>\r\n              </ul>\r\n            \r\n            </div>\r\n            <div class=\"d-flex justify-content-start mb-2 mt-2\">\r\n              <div>\r\n                <button type=\"button\" class=\"btn btn-warning btn-sm mr-1 text-end\" (click)=\"gorevBasla(task.status,task.taskId)\">\r\n                  <span>Başla</span>\r\n              </button>\r\n              <button *ngIf=\"task.createdBy!=adi\" type=\"button\" class=\"btn btn-info btn-sm mr-1 text-end\"  (click)=\"editTask(task);\">\r\n                <span>Gör</span>\r\n            </button>\r\n              <button *ngIf=\"task.createdBy==adi\" type=\"button\" class=\"btn btn-success btn-sm mr-1 text-end\" (click)=\"editrecord(task.taskId);\">\r\n                <span>Düzelt</span>\r\n            </button>\r\n            <button *ngIf=\"task.createdBy==adi\" type=\"button\" class=\"btn btn-danger btn-sm mr-1 text-end\" (click)=\"deleteTask(task.taskId);\">\r\n              <span>Sil</span>\r\n          </button>\r\n      \r\n              </div>\r\n            </div>\r\n          \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-xl-3 col-sm-6 col-12\">\r\n      <h5 class=\"mt-2 mb-0\">\r\n        <span class=\"d-flex align-items-center\">\r\n          <i class=\"ft-codepen mr-2\"></i>\r\n          <span>Yapılacak</span>\r\n        </span>\r\n      </h5>\r\n      <div class='dragdrop-container' [dragula]='\"task-group\"' id=\"Yapılacak\" [dragulaModel]='uiDesigningTasks'>\r\n        <div class=\"card mb-3\" *ngFor='let task of uiDesigningTasks' [attr.task-id]=\"task.taskId\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between mb-2\">\r\n              <span  style=\"white-space: normal;\" class=\"badge bg-light-{{task.badgeClass}}\">{{task.taskTitle}}</span>\r\n          \r\n            \r\n            </div>\r\n            <p *ngIf=\"task.messageType === 'text'\">{{task.taskMessage}}</p>\r\n            <div *ngIf=\"task.messageType === 'image'\"\r\n              class=\"d-flex justify-content-center overflow-hidden rounded my-3\">\r\n              <img [src]=\"task.taskMessage\" alt=\"ToDo Pic\" height=\"350\">\r\n            </div>\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <div class=\"d-flex font-small-2\">\r\n                <div class=\"mr-2\" *ngIf=\"task.createdOn != ''\"><i class=\"ft-clock mr-1\"></i>{{task.createdOn}}</div>\r\n                <div class=\"mr-2\" *ngIf=\"task.messageCount != ''\"><i\r\n                    class=\"ft-message-square mr-1\"></i>{{task.messageCount}}</div>\r\n                <div *ngIf=\"task.linkCount != ''\"><i class=\"ft-link mr-1\"></i>{{task.linkCount}}</div>\r\n              </div>\r\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"task.isUserImg\">\r\n                <li *ngFor=\"let img of task.assignedTo\">\r\n                  <img class=\"rounded-circle\" [src]=\"img.re\" alt=\"Avatar\" height=\"24\" width=\"24\">\r\n                </li>\r\n              </ul>\r\n           \r\n            </div>\r\n\r\n            <div class=\"d-flex justify-content-end mb-2 mt-2\">\r\n              <div>\r\n                <button type=\"button\" class=\"btn btn-warning btn-sm mr-2 text-end\" (click)=\"gorevBasla(task.status,task.taskId)\">\r\n                  <span>Başla</span>\r\n              </button>\r\n                \r\n                 <button *ngIf=\"task.createdBy!=adi\" type=\"button\" class=\"btn btn-info btn-sm mr-1 text-end\"  (click)=\"editTask(task);\">\r\n                <span>Gör</span>\r\n            </button>\r\n              <button *ngIf=\"task.createdBy==adi\" type=\"button\" class=\"btn btn-success btn-sm mr-1 text-end\" (click)=\"editrecord(task.taskId);\">\r\n                <span>Düzelt</span>\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-danger btn-sm mr-2 text-end\" (click)=\"gorevGeriAl(task.status,task.taskId)\">\r\n              <span>Geri</span>\r\n          </button> \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-xl-3 col-sm-6 col-12\">\r\n      <h5 class=\"mt-2 mb-0\">\r\n        <span class=\"d-flex align-items-center\">\r\n          <i class=\"ft-trending-up mr-2\"></i>\r\n          <span>Yapılıyor</span>\r\n        </span>\r\n      </h5>\r\n      <div class='dragdrop-container' [dragula]='\"task-group\"' id=\"Yapılıyor\" [dragulaModel]='developingTasks'>\r\n        <div class=\"card mb-3\" *ngFor='let task of developingTasks' [attr.task-id]=\"task.taskId\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between mb-2\">\r\n              <span  style=\"white-space: normal;\" class=\"badge bg-light-{{task.badgeClass}}\">{{task.taskTitle}}</span>\r\n            \r\n            </div>\r\n            <p *ngIf=\"task.messageType === 'text'\">{{task.taskMessage}}</p>\r\n            <div *ngIf=\"task.messageType === 'image'\"\r\n              class=\"d-flex justify-content-center overflow-hidden rounded my-3\">\r\n              <img [src]=\"task.taskMessage\" alt=\"ToDo Pic\" height=\"350\">\r\n            </div>\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <div class=\"d-flex font-small-2\">\r\n                <div class=\"mr-2\" *ngIf=\"task.createdOn != ''\"><i class=\"ft-clock mr-1\"></i>{{task.createdOn}}</div>\r\n                <div class=\"mr-2\" *ngIf=\"task.messageCount != ''\"><i\r\n                    class=\"ft-message-square mr-1\"></i>{{task.messageCount}}</div>\r\n                <div *ngIf=\"task.linkCount != ''\"><i class=\"ft-link mr-1\"></i>{{task.linkCount}}</div>\r\n              </div>\r\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"task.isUserImg\">\r\n                <li *ngFor=\"let img of task.assignedTo\">\r\n                  <img class=\"rounded-circle\" [src]=\"img.re\" alt=\"Avatar\" height=\"24\" width=\"24\">\r\n                </li>\r\n              </ul>\r\n           \r\n            </div>\r\n            <div class=\"d-flex justify-content-end mb-2 mt-2\">\r\n              <div>\r\n                <button type=\"button\" class=\"btn btn-warning btn-sm mr-2 text-end\" (click)=\"gorevBasla(task.status,task.taskId)\">\r\n                  <span>Başla</span>\r\n              </button>\r\n                \r\n                 <button *ngIf=\"task.createdBy!=adi\" type=\"button\" class=\"btn btn-info btn-sm mr-1 text-end\"  (click)=\"editTask(task);\">\r\n                <span>Gör</span>\r\n            </button>\r\n              <button *ngIf=\"task.createdBy==adi\" type=\"button\" class=\"btn btn-success btn-sm mr-1 text-end\" (click)=\"editrecord(task.taskId);\">\r\n                <span>Düzelt</span>\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-danger btn-sm mr-2 text-end\" (click)=\"gorevGeriAl(task.status,task.taskId)\">\r\n              <span>Geri</span>\r\n          </button> \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-xl-3 col-sm-6 col-12\">\r\n      <h5 class=\"mt-2 mb-0\">\r\n        <span class=\"d-flex align-items-center\">\r\n          <i class=\"ft-briefcase mr-2\"></i>\r\n          <span>Tamamlandı</span>\r\n        </span>\r\n      </h5>\r\n      <div class='dragdrop-container' [dragula]='\"task-group\"' id=\"Tamamlandı\" [dragulaModel]='managementTasks'>\r\n        <div class=\"card mb-3\" *ngFor='let task of managementTasks' [attr.task-id]=\"task.taskId\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between mb-2\">\r\n              <span  style=\"white-space: normal;\" class=\"badge bg-light-{{task.badgeClass}}\">{{task.taskTitle}}</span>\r\n            \r\n            </div>\r\n            <p *ngIf=\"task.messageType === 'text'\">{{task.taskMessage}}</p>\r\n            <div *ngIf=\"task.messageType === 'image'\"\r\n              class=\"d-flex justify-content-center overflow-hidden rounded my-3\">\r\n              <img [src]=\"task.taskMessage\" alt=\"ToDo Pic\" height=\"350\">\r\n            </div>\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <div class=\"d-flex font-small-2\">\r\n                <div class=\"mr-2\" *ngIf=\"task.createdOn != ''\"><i class=\"ft-clock mr-1\"></i>{{task.createdOn}}</div>\r\n                <div class=\"mr-2\" *ngIf=\"task.messageCount != ''\"><i\r\n                    class=\"ft-message-square mr-1\"></i>{{task.messageCount}}</div>\r\n                <div *ngIf=\"task.linkCount != ''\"><i class=\"ft-link mr-1\"></i>{{task.linkCount}}</div>\r\n              </div>\r\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"task.isUserImg\">\r\n                <li *ngFor=\"let img of task.assignedTo\">  \r\n                  <img class=\"rounded-circle\" [src]=\"img.re\" alt=\"Avatar\" height=\"24\" width=\"24\">\r\n                </li>\r\n              </ul>\r\n            \r\n            </div>\r\n            <div class=\"d-flex justify-content-end mb-2 mt-2\">\r\n              \r\n              <div>\r\n                <button  type=\"button\" class=\"btn btn-info btn-sm mr-1 text-end\"  (click)=\"editTask(task);\">\r\n                  <span>Gör</span>\r\n              </button>\r\n                <button *ngIf=\"task.createdBy==adi\" type=\"button\" class=\"btn btn-danger btn-sm mr-2 text-end\" (click)=\"gorevGeriAl(task.status,task.taskId)\">\r\n                  <span>Geri Al</span>\r\n              </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!-- Taskboard Ends -->\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { DragulaModule } from 'ng2-dragula';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { TaskboardRoutingModule } from \"./taskboard-routing.module\";\r\n\r\nimport { TaskboardComponent } from \"./taskboard.component\";\r\nimport { CrudModalComponent } from './crud-modal/crud-modal.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        TaskboardRoutingModule,\r\n        DragulaModule.forRoot(),\r\n        FormsModule,\r\n        NgSelectModule,\r\n        ReactiveFormsModule,\r\n        NgbModule\r\n    ],\r\n    declarations: [\r\n        TaskboardComponent,\r\n        CrudModalComponent\r\n    ]\r\n})\r\nexport class TaskboardModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Task } from './taskboard.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { delay } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class TaskBoardService {\r\n\r\n  constructor() { }\r\n\r\n  public tasks: Task[] = [\r\n\r\n \r\n  \r\n  ];\r\n\r\n\r\n  addNewTask(title: string, message: string, type: string) {\r\n\r\n    let badgeClass = 'primary';\r\n\r\n    if(type === 'Marketing') {\r\n      badgeClass = 'primary'\r\n    }\r\n    else if(type === 'UI-Designing') {\r\n      badgeClass = 'warning'\r\n    }\r\n    else if(type === 'Developing') {\r\n      badgeClass = 'success'\r\n    }\r\n    else if(type === 'Management') {\r\n      badgeClass = 'info'\r\n    }\r\n\r\n\r\n    let task: Task = {\r\n      taskId: Math.round(Math.random() * 10000000000),\r\n      taskTitle: title,\r\n      taskMessage: message,\r\n      createdOn: 'Nov 12',\r\n      createdBy: 'Elizabeth Elliott',\r\n      assignedTo: ['assets/img/portrait/small/avatar-s-4.png'],\r\n      status: type,\r\n      badgeClass: badgeClass,\r\n      messageType: 'text',\r\n      messageCount: '',\r\n      linkCount: '',\r\n      belge: '',\r\n      belge2: '',\r\n      belge3: '',\r\n      isUserImg: true,\r\n    }\r\n    this.tasks.unshift(task);\r\n    return of(this.tasks.slice()).pipe(delay(100));\r\n\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}