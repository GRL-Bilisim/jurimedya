{"version":3,"file":"src_app_taskboard-ngrx_taskboard-ngrx_module_ts.js","mappings":"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","sources":["./src/app/taskboard-ngrx/taskboard-ngrx-routing.module.ts","./src/app/taskboard-ngrx/taskboard-ngrx.component.ts","./src/app/taskboard-ngrx/taskboard-ngrx.component.html","./src/app/taskboard-ngrx/taskboard-ngrx.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TaskboardNGRXComponent } from './taskboard-ngrx.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n     component: TaskboardNGRXComponent,\r\n    data: {\r\n      title: 'Taskboard'\r\n    },\r\n    \r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TaskboardNGRXRoutingModule { }","import { Component, ViewEncapsulation, ViewChild, ElementRef, OnInit, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Task } from './taskboard-ngrx.model';\r\n\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nimport * as TaskboadActions from './store/taskboard.actions';\r\nimport * as fromApp from '../store/app.reducer';\r\nimport { map } from 'rxjs/operators';\r\nimport { DragulaService } from 'ng2-dragula';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CrudModalComponent } from 'app/taskboard/crud-modal/crud-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-ngrx-taskboard',\r\n  templateUrl: './taskboard-ngrx.component.html',\r\n  styleUrls: ['./taskboard-ngrx.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n\r\n})\r\nexport class TaskboardNGRXComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild('todoTitle') titleInputRef: ElementRef;\r\n  @ViewChild('todoMessage') messageInputRef: ElementRef;\r\n  subscription: Subscription;\r\n\r\n  BAG = \"task-group\";\r\n\r\n\r\n  tasks: Task[];\r\n  marketingTasks: Task[];\r\n  uiDesigningTasks: Task[];\r\n  developingTasks: Task[];\r\n  managementTasks: Task[];\r\n\r\n  constructor(private elRef: ElementRef, private dragulaService: DragulaService, private store: Store<fromApp.AppState>,\r\n    private ref: ChangeDetectorRef, private modalService: NgbModal) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.store\r\n      .select('task')\r\n      .subscribe(data => {\r\n        this.tasks = data.tasks;\r\n        this.loadTasks();\r\n        this.dragulaService.drop(this.BAG)\r\n          .subscribe(({ el, target }) => {\r\n            this.updateTaskStatus(el.getAttribute('task-id'), target.id)\r\n          });\r\n      });\r\n  }\r\n\r\n  loadTasks() {\r\n    this.marketingTasks = this.tasks.filter((task: Task) => task.status === 'Marketing');\r\n    this.uiDesigningTasks = this.tasks.filter((task: Task) => task.status === 'UI-Designing');\r\n    this.developingTasks = this.tasks.filter((task: Task) => task.status === 'Developing');\r\n    this.managementTasks = this.tasks.filter((task: Task) => task.status === 'Management');\r\n    this.ref.markForCheck();\r\n  }\r\n\r\n  addTask() {\r\n    const modalRef = this.modalService.open(CrudModalComponent);\r\n    modalRef.componentInstance.id = 0; // should be the id\r\n    modalRef.componentInstance.data = { title: '', message: '', type: 'Marketing' }; // should be the data\r\n\r\n    modalRef.result.then((result) => {\r\n\r\n      let newTask = this.task(result.title, result.message, result.type)\r\n\r\n      this.store.dispatch(new TaskboadActions.AddTask(newTask));\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n\r\n  editTask(task: Task) {\r\n    const modalRef = this.modalService.open(CrudModalComponent);\r\n    modalRef.componentInstance.id = task.taskId; // should be the id\r\n    modalRef.componentInstance.data = { title: task.taskTitle, message: task.taskMessage, type: task.status }; // should be the data\r\n\r\n    modalRef.result.then((result) => {\r\n\r\n      let newTaskObj = this.createObject(task);\r\n\r\n      newTaskObj.taskTitle = result.title;\r\n      newTaskObj.taskMessage = result.message;\r\n      newTaskObj.status = result.type;\r\n\r\n      this.updateTaskStatus(newTaskObj.taskId.toString(), newTaskObj.status, newTaskObj);\r\n\r\n\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  updateTaskStatus(id: string, status: string, task?: Task) {\r\n    let badgeClass = 'primary';\r\n\r\n    if (status === 'Marketing') {\r\n      badgeClass = 'primary'\r\n    }\r\n    else if (status === 'UI-Designing') {\r\n      badgeClass = 'warning'\r\n    }\r\n    else if (status === 'Developing') {\r\n      badgeClass = 'success'\r\n    }\r\n    else if (status === 'Management') {\r\n      badgeClass = 'info'\r\n    }\r\n\r\n    let currentTask: Task;\r\n\r\n    if (task) {\r\n      currentTask = task;\r\n    }\r\n    else {\r\n      currentTask = this.tasks.find(x => x.taskId === +id);\r\n    }\r\n\r\n    let newTaskObj = this.createObject(currentTask);\r\n\r\n    newTaskObj.status = status;\r\n    newTaskObj.badgeClass = badgeClass;\r\n\r\n    let index = this.tasks.indexOf(this.tasks.find(x => x.taskId === currentTask.taskId));\r\n\r\n    this.store.dispatch(\r\n      new TaskboadActions.UpdateTask({\r\n        index: index,\r\n        newTask: newTaskObj\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteTask(id: number) {\r\n    let task: Task = this.tasks.find(x => x.taskId === id);\r\n    let index = this.tasks.indexOf(task);\r\n    this.store.dispatch(new TaskboadActions.DeleteTask(index));\r\n  }\r\n\r\n  task(title: string, message: string, type: string) {\r\n\r\n    let badgeClass = 'primary';\r\n\r\n    if (type === 'Marketing') {\r\n      badgeClass = 'primary'\r\n    }\r\n    else if (type === 'UI-Designing') {\r\n      badgeClass = 'warning'\r\n    }\r\n    else if (type === 'Developing') {\r\n      badgeClass = 'success'\r\n    }\r\n    else if (type === 'Management') {\r\n      badgeClass = 'info'\r\n    }\r\n\r\n\r\n    let task: Task = {\r\n      taskId: Math.round(Math.random() * 10000000000),\r\n      taskTitle: title,\r\n      taskMessage: message,\r\n      createdOn: 'Nov 12',\r\n      createdBy: 'Elizabeth Elliott',\r\n      assignedTo: ['assets/img/portrait/small/avatar-s-4.png'],\r\n      status: type,\r\n      badgeClass: badgeClass,\r\n      messageType: 'text',\r\n      messageCount: '',\r\n      linkCount: '',\r\n      isUserImg: true,\r\n    }\r\n    return task;\r\n\r\n  }\r\n\r\n  createObject(task) {\r\n\r\n    return new Task(\r\n      task.taskId,\r\n      task.taskTitle,\r\n      task.badgeClass,\r\n      task.taskMessage,\r\n      task.messageType,\r\n      task.messageCount,\r\n      task.linkCount,\r\n      task.createdOn,\r\n      task.createdBy,\r\n      task.assignedTo,\r\n      task.isUserImg,\r\n      task.status\r\n    )\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n\r\n}\r\n","<!-- Taskboard Starts -->\r\n<section id=\"taskboard\" class=\"app-taskboard\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"my-3\">\r\n        <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"addTask()\">\r\n          <span class=\"d-flex align-items-center\">\r\n            <i class=\"ft-plus mr-1\"></i>\r\n            <span>Create</span>\r\n          </span>\r\n        </button>\r\n        <button type=\"button\" class=\"btn bg-light-primary\">\r\n          <span class=\"d-flex align-items-center\">\r\n            <i class=\"ft-filter mr-1\"></i>\r\n            <span>Filter</span>\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-3 col-sm-6 col-12\">\r\n      <h5 class=\"mt-2 mb-0\">\r\n        <span class=\"d-flex align-items-center\">\r\n          <i class=\"ft-cast mr-2\"></i>\r\n          <span>Marketing</span>\r\n        </span>\r\n      </h5>\r\n      <div class='dragdrop-container' [dragula]='\"task-group\"' id=\"Marketing\" [dragulaModel]='marketingTasks'>\r\n\r\n        <div class=\"card mb-3\" *ngFor='let task of marketingTasks' [attr.task-id]=\"task.taskId\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between mb-2\">\r\n              <span class=\"badge bg-light-{{task.badgeClass}}\">{{task.taskTitle}}</span>\r\n              <div>\r\n                <i class=\"ft-edit mr-1 primary cursor-pointer\" (click)=\"editTask(task);\"></i>\r\n                <i class=\"ft-trash-2 danger cursor-pointer\" (click)=\"deleteTask(task.taskId);\"></i>\r\n              </div>\r\n            </div>\r\n            <p *ngIf=\"task.messageType === 'text'\">{{task.taskMessage}}</p>\r\n            <div *ngIf=\"task.messageType === 'image'\"\r\n              class=\"d-flex justify-content-center overflow-hidden rounded my-3\">\r\n              <img [src]=\"task.taskMessage\" alt=\"ToDo Pic\" height=\"350\">\r\n            </div>\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <div class=\"d-flex font-small-2\">\r\n                <div class=\"mr-2\" *ngIf=\"task.createdOn != ''\"><i class=\"ft-clock mr-1\"></i>{{task.createdOn}}</div>\r\n                <div class=\"mr-2\" *ngIf=\"task.messageCount != ''\"><i\r\n                    class=\"ft-message-square mr-1\"></i>{{task.messageCount}}</div>\r\n                <div *ngIf=\"task.linkCount != ''\"><i class=\"ft-link mr-1\"></i>{{task.linkCount}}</div>\r\n              </div>\r\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"task.isUserImg\">\r\n                <li *ngFor=\"let img of task.assignedTo\">\r\n                  <img class=\"rounded-circle\" [src]=\"img\" alt=\"Avatar\" height=\"24\" width=\"24\">\r\n                </li>\r\n              </ul>\r\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"!task.isUserImg\">\r\n                <li *ngFor=\"let badge of task.assignedTo\">\r\n                  <span class=\"badge badge-pill badge-round bg-light-{{badge.class}} font-small-1\">{{badge.name}}</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-xl-3 col-sm-6 col-12\">\r\n      <h5 class=\"mt-2 mb-0\">\r\n        <span class=\"d-flex align-items-center\">\r\n          <i class=\"ft-codepen mr-2\"></i>\r\n          <span>UI Designing</span>\r\n        </span>\r\n      </h5>\r\n      <div class='dragdrop-container' [dragula]='\"task-group\"' id=\"UI-Designing\" [dragulaModel]='uiDesigningTasks'>\r\n        <div class=\"card mb-3\" *ngFor='let task of uiDesigningTasks' [attr.task-id]=\"task.taskId\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between mb-2\">\r\n              <span class=\"badge bg-light-{{task.badgeClass}}\">{{task.taskTitle}}</span>\r\n              <div>\r\n                <i class=\"ft-edit mr-1 primary cursor-pointer\" (click)=\"editTask(task);\"></i>\r\n                <i class=\"ft-trash-2 danger cursor-pointer\" (click)=\"deleteTask(task.taskId);\"></i>\r\n              </div>\r\n            </div>\r\n            <p *ngIf=\"task.messageType === 'text'\">{{task.taskMessage}}</p>\r\n            <div *ngIf=\"task.messageType === 'image'\"\r\n              class=\"d-flex justify-content-center overflow-hidden rounded my-3\">\r\n              <img [src]=\"task.taskMessage\" alt=\"ToDo Pic\" height=\"350\">\r\n            </div>\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <div class=\"d-flex font-small-2\">\r\n                <div class=\"mr-2\" *ngIf=\"task.createdOn != ''\"><i class=\"ft-clock mr-1\"></i>{{task.createdOn}}</div>\r\n                <div class=\"mr-2\" *ngIf=\"task.messageCount != ''\"><i\r\n                    class=\"ft-message-square mr-1\"></i>{{task.messageCount}}</div>\r\n                <div *ngIf=\"task.linkCount != ''\"><i class=\"ft-link mr-1\"></i>{{task.linkCount}}</div>\r\n              </div>\r\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"task.isUserImg\">\r\n                <li *ngFor=\"let img of task.assignedTo\">\r\n                  <img class=\"rounded-circle\" [src]=\"img\" alt=\"Avatar\" height=\"24\" width=\"24\">\r\n                </li>\r\n              </ul>\r\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"!task.isUserImg\">\r\n                <li *ngFor=\"let badge of task.assignedTo\">\r\n                  <span class=\"badge badge-pill badge-round bg-light-{{badge.class}} font-small-1\">{{badge.name}}</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-xl-3 col-sm-6 col-12\">\r\n      <h5 class=\"mt-2 mb-0\">\r\n        <span class=\"d-flex align-items-center\">\r\n          <i class=\"ft-trending-up mr-2\"></i>\r\n          <span>Developing</span>\r\n        </span>\r\n      </h5>\r\n      <div class='dragdrop-container' [dragula]='\"task-group\"' id=\"Developing\" [dragulaModel]='developingTasks'>\r\n        <div class=\"card mb-3\" *ngFor='let task of developingTasks' [attr.task-id]=\"task.taskId\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between mb-2\">\r\n              <span class=\"badge bg-light-{{task.badgeClass}}\">{{task.taskTitle}}</span>\r\n              <div>\r\n                <i class=\"ft-edit mr-1 primary cursor-pointer\" (click)=\"editTask(task);\"></i>\r\n                <i class=\"ft-trash-2 danger cursor-pointer\" (click)=\"deleteTask(task.taskId);\"></i>\r\n              </div>\r\n            </div>\r\n            <p *ngIf=\"task.messageType === 'text'\">{{task.taskMessage}}</p>\r\n            <div *ngIf=\"task.messageType === 'image'\"\r\n              class=\"d-flex justify-content-center overflow-hidden rounded my-3\">\r\n              <img [src]=\"task.taskMessage\" alt=\"ToDo Pic\" height=\"350\">\r\n            </div>\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <div class=\"d-flex font-small-2\">\r\n                <div class=\"mr-2\" *ngIf=\"task.createdOn != ''\"><i class=\"ft-clock mr-1\"></i>{{task.createdOn}}</div>\r\n                <div class=\"mr-2\" *ngIf=\"task.messageCount != ''\"><i\r\n                    class=\"ft-message-square mr-1\"></i>{{task.messageCount}}</div>\r\n                <div *ngIf=\"task.linkCount != ''\"><i class=\"ft-link mr-1\"></i>{{task.linkCount}}</div>\r\n              </div>\r\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"task.isUserImg\">\r\n                <li *ngFor=\"let img of task.assignedTo\">\r\n                  <img class=\"rounded-circle\" [src]=\"img\" alt=\"Avatar\" height=\"24\" width=\"24\">\r\n                </li>\r\n              </ul>\r\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"!task.isUserImg\">\r\n                <li *ngFor=\"let badge of task.assignedTo\">\r\n                  <span class=\"badge badge-pill badge-round bg-light-{{badge.class}} font-small-1\">{{badge.name}}</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-xl-3 col-sm-6 col-12\">\r\n      <h5 class=\"mt-2 mb-0\">\r\n        <span class=\"d-flex align-items-center\">\r\n          <i class=\"ft-briefcase mr-2\"></i>\r\n          <span>Management</span>\r\n        </span>\r\n      </h5>\r\n      <div class='dragdrop-container' [dragula]='\"task-group\"' id=\"Management\" [dragulaModel]='managementTasks'>\r\n        <div class=\"card mb-3\" *ngFor='let task of managementTasks' [attr.task-id]=\"task.taskId\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between mb-2\">\r\n              <span class=\"badge bg-light-{{task.badgeClass}}\">{{task.taskTitle}}</span>\r\n              <div>\r\n                <i class=\"ft-edit mr-1 primary cursor-pointer\" (click)=\"editTask(task);\"></i>\r\n                <i class=\"ft-trash-2 danger cursor-pointer\" (click)=\"deleteTask(task.taskId);\"></i>\r\n              </div>\r\n            </div>\r\n            <p *ngIf=\"task.messageType === 'text'\">{{task.taskMessage}}</p>\r\n            <div *ngIf=\"task.messageType === 'image'\"\r\n              class=\"d-flex justify-content-center overflow-hidden rounded my-3\">\r\n              <img [src]=\"task.taskMessage\" alt=\"ToDo Pic\" height=\"350\">\r\n            </div>\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <div class=\"d-flex font-small-2\">\r\n                <div class=\"mr-2\" *ngIf=\"task.createdOn != ''\"><i class=\"ft-clock mr-1\"></i>{{task.createdOn}}</div>\r\n                <div class=\"mr-2\" *ngIf=\"task.messageCount != ''\"><i\r\n                    class=\"ft-message-square mr-1\"></i>{{task.messageCount}}</div>\r\n                <div *ngIf=\"task.linkCount != ''\"><i class=\"ft-link mr-1\"></i>{{task.linkCount}}</div>\r\n              </div>\r\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"task.isUserImg\">\r\n                <li *ngFor=\"let img of task.assignedTo\">\r\n                  <img class=\"rounded-circle\" [src]=\"img\" alt=\"Avatar\" height=\"24\" width=\"24\">\r\n                </li>\r\n              </ul>\r\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"!task.isUserImg\">\r\n                <li *ngFor=\"let badge of task.assignedTo\">\r\n                  <span class=\"badge badge-pill badge-round bg-light-{{badge.class}} font-small-1\">{{badge.name}}</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!-- Taskboard Ends -->\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { StoreModule } from '@ngrx/store';\r\n\r\nimport { DragulaModule } from 'ng2-dragula';\r\nimport { TaskboardNGRXRoutingModule } from \"./taskboard-ngrx-routing.module\";\r\n\r\nimport { TaskboardNGRXComponent } from \"./taskboard-ngrx.component\";\r\nimport { taskReducer } from '../taskboard-ngrx/store/taskboard.reducers';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        TaskboardNGRXRoutingModule,\r\n        DragulaModule.forRoot(),\r\n        StoreModule.forFeature('task', taskReducer)\r\n    ],\r\n    declarations: [\r\n        TaskboardNGRXComponent\r\n    ]\r\n})\r\nexport class TaskboardNGRXModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}